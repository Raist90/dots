[language-server]
deno = { command = "deno", args = [ "lsp" ]}
emmet-ls = { command = "emmet-ls", args = [ "--stdio" ]}
bash-language-server = { command = "bash-language-server", args = ["start"] }

[language-server.eslint]
command = "vscode-eslint-language-server"
args = ["--stdio"]

[language-server.eslint.config]
codeActionsOnSave = { mode = "all", "source.fixAll.eslint" = true }
format = { enable = true }
nodePath = ""
quiet = false
rulesCustomizations = []
run = "onType"
validate = "on"
experimental = {}
problems = { shortenToSingleLine = false }
workingDirectory = { mode = "auto" }

[language-server.eslint.config.codeAction]
disableRuleComment = { enable = true, location = "separateLine" }
showDocumentation = { enable = false }

[language-server.vscode-json-language-server.config]
json = { validate = { enable = true }, format = { enable = true } }
provideFormatter = true

[language-server.vscode-css-language-server.config]
css = { validate = { enable = true } }
scss = { validate = { enable = true } }
less = { validate = { enable = true } }
provideFormatter = true


[[language]]
name = "typescript"
language-servers = [ "typescript-language-server", "eslint", "tailwindcss-ls" ]
formatter = { command = "prettier", args = [ "--parser", "typescript" ] }
auto-format = true

[[language]]
name = "tsx"
language-servers = [ "typescript-language-server", "eslint", "tailwindcss-ls", "emmet-ls" ]
formatter = { command = "prettier", args = [ "--parser", "typescript" ] }
auto-format = true

[[language]]
name = "javascript"
language-servers = [ "typescript-language-server", "eslint", "emmet-ls" ]
formatter = { command = "prettier", args = [ "--parser", "typescript" ] }
auto-format = true

[[language]]
name = "jsx"
language-servers = [ "typescript-language-server", "eslint", "emmet-ls" ]
formatter = { command = "prettier", args = [ "--parser", "typescript" ] }
auto-format = true

[[language]]
name = "json"
formatter = { command = "prettier", args = [ "--parser", "json" ] }
auto-format = true

[[language]]
name = "html"
language-servers = [ "vscode-html-language-server", "emmet-ls", "tailwindcss-ls" ]
formatter = { command = 'prettier', args = ["--parser", "html"] }
auto-format = true

[[language]]
name = "css"
language-servers = [ "vscode-css-language-server", "emmet-ls", "tailwindcss-ls" ]
formatter = { command = 'prettier', args = ["--parser", "css"] }
auto-format = true

[language-server.astro-ls]
command = "astro-ls"
args = ["--stdio"]
config = { typescript = { tsdk = "/Users/manuel.detoma/.nvm/versions/node/v18.18.2/lib/node_modules/typescript/lib" }}

[[language]]
name = "astro"
scope = "source.astro"
injection-regex = "astro"
file-types = ["astro"]
language-servers = [ "astro-ls", "eslint" ]
formatter = { command = "prettier", args = ["--plugin", "prettier-plugin-astro", "--parser", "astro"] }
auto-format = true

# [language-server.vuels]
# command = "vue-language-server"
# args = ["--stdio"]

[[language]]
name = "vue"
auto-format = true
formatter = { command = "prettier", args = ["--parser", "vue"] }
# language-servers = ["vuels", "typescript-language-server", "eslint", "tailwindcss-ls"]
language-servers = ["typescript-language-server", "eslint", "tailwindcss-ls"]

[[language-server.typescript-language-server.config.plugins]]
name = "@vue/typescript-plugin"
# location = "/opt/homebrew/lib/node_modules/@vue/language-server"
languages = ["vue"]
location = "/home/manuel/.nvm/versions/node/v20.10.0/lib/node_modules/@vue"

# [language-server.vuels.config]
# vue = { hybridMode = false }
# typescript = { tsdk = "/opt/homebrew/Cellar/typescript/5.4.5/libexec/lib/node_modules/typescript/lib" }
